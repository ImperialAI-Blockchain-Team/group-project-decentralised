{"version":3,"sources":["contractInterfaces/modeldatabase.js","ipfs.js","abi/abi.js","contractInterfaces/registrydatabase.js","components/MenuBar/MenuBar.js","components/pages/RegisterAsset/dataset.js","components/pages/RegisterAsset/model.js","components/forms/user.js","components/pages/SignUp/main.js","components/browsers/dataset.js","components/pages/Explore/dataset.js","components/browsers/model.js","components/pages/Explore/model.js","components/job.js","App.js","reportWebVitals.js","index.js","contractInterfaces/web3.js","components/forms/dataset.js","components/forms/model.js","components/dragZone/dragZone.js","contractInterfaces/datasetdatabase.js"],"names":["web3","eth","Contract","modelDatabase","ipfs","require","host","port","protocol","datasetDatabase","registry","MenuBar","className","Link","to","class","React","Component","RegisterDatasetPage","RegisterModelPage","validate","username","email","address","type","errors","length","push","test","RegisterUserForm","props","onClick","a","setState","blockNumber","gasUsed","getTransactionReceipt","state","transactionHash","err","txReceipt","console","log","displayTable","handleSubmit","event","preventDefault","name","alert","JSON","stringify","localStorage","setItem","getAccounts","accounts","account","registrydatabase","options","ethAddress","methods","insertUser","data_scientist","aggregator","data_owner","send","from","on","hash","error","receipt","contractError","handleCheckChange","target","checked","checkedValue","value","index","handleChange","bind","this","onSubmit","handleSubmit2","onChange","id","bordered","responsive","RegisterUserPage","DatasetBrowser","handleOnKeyUp","searchValue","renderDatasets","datasetList","browserIntroduction","getNumberOfDatasets","datasetdatabase","getNumberOfs","call","numberOfDatasets","Promise","resolve","reject","Error","getDatasetList","newDatasetList","i","hashes","ipfsHash","datasets","dataset","reverse","subDatasetList","filter","toLowerCase","startsWith","map","Date","toLocaleDateString","handleClick","renderedDatasets","renderedDatasetList","fileHash","files","get","datasetInfo","label","filename","exportFile","samples","then","onKeyUp","placeholder","BrowseDatasetsPage","ModelBrowser","getNumberOfModels","modeldatabase","numberOfModels","getModelList","newModelList","models","model","modelList","renderModels","subModelList","renderedModels","renderedModelList","modelInfo","BrowseModelsPage","JobForm","showDiv1","showDiv2","showX","showN","showU","showK","strategy","epoch","batch_size","round","fraction_eval","fraction_fit","min_fit_clients","min_eval_clients","min_clients","failure","beta","slr","clr","da","distr","mean","std","ub","lb","gain","fan","linear","slope","open1","open2","openn","openu","openx","openk","handleDefault1","handleDefault2","Button","disabled","data-dismiss","App","Switch","Route","exact","path","Redirect","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","BrowserRouter","document","getElementById","window","Web3","currentProvider","provider","providers","HttpProvider","UploadDatasetForm","add","buffer","registerDataset","captureFile","stopPropagation","file","reader","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","result","modelName","description","UploadModelForm","formErrors","isUser","isRegistered","getUser","message","registerModel","accept"],"mappings":"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","file":"static/js/main.16cba049.chunk.js","sourcesContent":["import web3 from './web3';\nimport { modelDatabase} from \"../abi/abi\";\n\nconst address = '0xa91A90BB6C18E60cAf41Db14A818687b5845d66a';\n\nexport default new web3.eth.Contract(modelDatabase, address);","const IPFS = require('ipfs-api');\n\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https'});\n\nexport default ipfs;","export const modelDatabase = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_contractAddressRegistry\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"hashes\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"models\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"description\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"objective\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"time\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"registered\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_ipfsHash\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_description\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_objective\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"registerModel\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"getNumberOfModels\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_ipfsHash\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_description\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_objective\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"modifyModel\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_ipfsHash\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"deleteModel\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_ipfsHash\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"getModelOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n];\n\nexport const datasetDatabase =  [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_contractAddressRegistry\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"datasets\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"description\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"objective\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"time\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"registered\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"hashes\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_ipfsHash\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_description\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_objective\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"registerDataset\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"getNumberOfs\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_ipfsHash\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_description\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_objective\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"modifyDataset\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_ipfsHash\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"deleteDataset\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_ipfsHash\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"getDatasetOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n]\n\n\nexport const registry = [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"userAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"user_name\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"data_scientist\",\n          \"type\": \"bool\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"aggregator\",\n          \"type\": \"bool\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"hospital\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"LogNewUser\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"userAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"user_name\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"data_scientist\",\n          \"type\": \"bool\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"aggregator\",\n          \"type\": \"bool\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"hospital\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"LogUpdateUser\",\n      \"type\": \"event\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"registrations\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"user_name\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"data_scientist\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"aggregator\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"hospital\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"registered\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"userHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"userAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isUser\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"isIndeed\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"userAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isDataScientist\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"isIndeed\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"userAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isDataOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"isIndeed\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"user_name\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"data_scientist\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"aggregator\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"hospital\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"insertUser\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"index\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"userAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getUser\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"user_name\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"data_scientist\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"aggregator\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"hospital\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"userAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"data_scientist\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"aggregator\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"hospital\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"updateUserType\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"getUserCount\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"count\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"index\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getUserAtIndex\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"userAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"userAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"deleteUser\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n];\n\nexport const jobs = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_contractAddressDatasets\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_contractAddressModels\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"jobs\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address payable\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"modelIpfsHash\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"strategyHash\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"minClients\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"initTime\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"daysUntilStart\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"active\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"registered\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"trainingStarted\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"holdingFee\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"numAllow\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bounty\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"feeSum\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_modelIpfsHash\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"isSenderModelOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_modelIpfsHash\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"isSenderDatasetOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getJobStartTime\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"registrationPeriodOver\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_modelIpfsHash\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_strategyHash\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_minClients\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_daysUntilStart\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_bounty\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_holdingFee\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"createJob\",\n      \"outputs\": [],\n      \"payable\": true,\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_datasetIpfsHash\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"registerDatasetOwner\",\n      \"outputs\": [],\n      \"payable\": true,\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address payable\",\n          \"name\": \"_datasetOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"addToAllowList\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getNumRegistered\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getNumAllow\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getJobDetails\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getJobStatus\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"start_job\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"withdrawFee\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"jobId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"deactivateJob\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n];","import web3 from './web3';\nimport {registry} from \"../abi/abi\";\n\nconst address = '0x9b673923B47B678299834c82f63049E46f6b3D8b';\n\nexport default new web3.eth.Contract(registry, address);","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"./MenuBar.css\"\n\nexport class MenuBar extends React.Component {\n\n    render() {\n\n        return (\n                <div className=\"navbar\">\n                    <Link to=\"/about\">About</Link>\n                    <Link to=\"/sign_up\">Sign Up</Link>\n                    <Link to=\"/my_account\">My Account</Link>\n                    <div className=\"dropdown\">\n                        <button className=\"dropbtn\">Register your Assets<i className=\"fa fa-caret-down\"></i></button>\n                        <div class=\"dropdown-content\">\n                            <Link to=\"/register_model\">Your Model</Link>\n                            <Link to=\"/register_dataset\">Your Dataset</Link>\n                        </div>\n                    </div>\n                    <div className=\"dropdown\">\n                        <button className=\"dropbtn\">Explore <i className=\"fa fa-caret-down\"></i></button>\n                        <div className=\"dropdown-content\">\n                            <Link to=\"/browse_models\">Models</Link>\n                            <Link to=\"/browse_datasets\">Datasets</Link>\n                            <Link to=\"/browse_jobs\">Jobs</Link>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./dataset.css\"\nimport {UploadDatasetForm} from \"../../forms/dataset.js\"\n\nexport class RegisterDatasetPage extends React.Component {\n\n    render() {\n        return (\n            <div className='form-container'>\n                <UploadDatasetForm />\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./model.css\"\nimport {UploadModelForm} from \"../../forms/model.js\"\n\nexport class RegisterModelPage extends React.Component {\n\n    render() {\n        return (\n            <div className='form-container'>\n                <UploadModelForm />\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./user.css\";\n\nimport web3 from \"../../contractInterfaces/web3\";\nimport registrydatabase from \"../../contractInterfaces/registrydatabase\"\n\n\nfunction validate(username, email, address, type){\n\n    const errors = [];\n\n    if (username.length === 0) {\n        errors.push(\"Name can't be empty\");\n    }\n    if (email.length === 0) {\n        errors.push(\"Email can't be empty\");\n    }\n    if (address.length === 0){\n        errors.push(\"Address can't be empty\")\n    }\n    if (type.length === 0){\n        errors.push(\"Please choose a type\")\n    }\n\n\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if ( re.test(email) ) {\n        // this is a valid email address\n\n    }\n    else {\n        errors.push(\"Enter a valid email\")\n    }\n\n    let re2 = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n\n    if (re2.test(address)){\n\n    }\n    else{\n        errors.push(\"Enter a valid IP address\")\n    }\n\n    return errors\n}\n\nexport class RegisterUserForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            address: '',\n            type: [],\n            data_scientist: false,\n            aggregator : false,\n            data_owner:false,\n            account : '',\n            ethAddress:'',\n            index : ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({[name]: event.target.value});\n    }\n\n    onClick = async () => {\n        try{\n            this.setState({blockNumber:\"waiting..\"});\n            this.setState({gasUsed:\"waiting...\"});\n            await web3.eth.getTransactionReceipt(this.state.transactionHash,\n                (err, txReceipt)=>{console.log(err,txReceipt);\n                this.setState({txReceipt});\n            });\n        } catch(error){console.log(error)}\n        this.setState({displayTable:true})\n    }\n\n\n\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const errors = validate(this.state.name, this.state.email, this.state.address, this.state.type)\n        if (errors.length > 0){\n            alert(JSON.stringify(errors));\n            return;\n        }\n        alert(\"Your details have been submitted\")\n\n        localStorage.setItem(JSON.stringify(this.state.name),JSON.stringify(this.state.address))\n\n\n        //bring in user's metamask account address\n        const accounts = await web3.eth.getAccounts();\n        this.setState({account: accounts[0]})\n\n        //obtain contract address from registrydatabase.js\n        const ethAddress = await registrydatabase.options.address;\n\n        this.setState({ethAddress});\n        console.log(accounts)\n        // return the transaction hash from the ethereum contract\n        await registrydatabase.methods.insertUser(this.state.name, this.state.data_scientist,this.state.aggregator,this.state.data_owner).send({from: accounts[0]})\n        .on('transactionHash', (hash) =>{\n            console.log(hash);\n            this.setState({transactionHash:hash})\n        })\n        .on('error', async (error, receipt) => {\n            console.log(error);\n            this.setState({contractError: 'Contract Error: Model already registered'})\n            if (receipt) {\n                console.log(receipt[\"transactionHash\"])\n                //let txHash = receipt[\"transactionHash\"]\n                //let blockNum = receipt[\"blockNumber\"]\n                //console.log(await getRevertReason(txHash,'ropsten'))\n            }\n        })\n\n        //registering user\n        //{from : accounts[0]}\n        //const index =  await registrydatabase.methods.insertUser(this.state.name, this.state.data_scientist,this.state.aggregator,this.state.data_owner).call({from : accounts[0]})\n        //const index = await registrydatabase.methods.insertUser(this.state.name, this.state.data_scientist,this.state.aggregator,this.state.data_owner).call()\n        //const userCount = registrydatabase.methods.userCount()\n        //alert(JSON.stringify(userCount))\n        //alert(JSON.stringify(index))\n\n        \n\n        //this.setState({index})\n        console.log(JSON.stringify(this.state))\n\n        //console.log(index)\n        //console.log(userCount)\n\n\n\n\n\n\n    }\n\n    handleSubmit2(event) {\n\n\n    }\n\n\n\n    handleCheckChange = (event) => {\n        // to find out if it's checked or not; returns true or false\n        const checked = event.target.checked;\n\n        // to get the checked value\n        const checkedValue = event.target.value;\n\n        if (checkedValue == \"Data Scientist\") {\n            this.state.data_scientist = true;\n          }\n\n        if (checkedValue == \"Aggregator\") {\n            this.state.aggregator = true;\n          }\n\n        if (checkedValue == \"Data Owner\") {\n            this.state.data_owner = true;\n          }\n\n        this.state.type.push(JSON.stringify(checkedValue));\n\n    }\n\n    render() {\n        return (\n        <form onSubmit={this.handleSubmit2}>\n            <div className=\"container\">\n                <div className='sub-container'>\n                    <h2>Register here</h2>\n                    <p>Please fill in this form.</p>\n                    <hr />\n\n                    <label>\n                    <b>Username</b>:\n                    <input name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} />\n                    </label>\n                    <label>\n                    <b>Email Address</b>:\n                    <input name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChange} />\n                    </label>\n                    <label>\n                    <b>IP Address</b>:\n                    <input name=\"address\" type=\"text\" value={this.state.address} onChange={this.handleChange} />\n                    </label>\n                    <label>\n                    <b> User Type</b>:\n                    </label>\n                    <br></br>\n                    <br></br>\n                    <input type=\"checkbox\" id=\"checkbox\" value = \"Data Scientist\" onChange={this.handleCheckChange.bind(this)}/><span>Data Scientist</span>\n                    <input type=\"checkbox\" id=\"checkbox\" value = \"Aggregator\" onChange={this.handleCheckChange.bind(this)}/><span>Aggregator</span>\n                    <input type=\"checkbox\" id=\"checkbox\" value = \"Data Owner\" onChange={this.handleCheckChange.bind(this)}/><span>Data Owner</span>\n\n                    <br></br>\n                    <br></br>\n                    <button onClick={this.handleSubmit.bind(this)}>Register</button>\n                </div>\n            </div>\n\n            {this.state.displayTable && <div className=\"center\">\n                <table bordered responsive>\n                    <thead>\n                        <tr>\n                            <th>Tx Receipt Category</th>\n                            <th> </th>\n                            <th>Values</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Ethereum Contract Address</td>\n                            <td> : </td>\n                            <td>{this.state.ethAddress}</td>\n                        </tr>\n                        <tr>\n                            <td>Tx # </td>\n                            <td> : </td>\n                            <td>{this.state.transactionHash}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>}\n        </form>\n        )\n    }\n}\n","import React from \"react\";\nimport \"./main.css\"\nimport {RegisterUserForm} from \"../../forms/user.js\"\n\nexport class RegisterUserPage extends React.Component {\n\n    render() {\n        return (\n            <div className='form-container'>\n                <RegisterUserForm />\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./dataset.css\";\nimport DownloadLink from \"react-download-link\";\nimport ipfs from '../../ipfs';\nimport datasetdatabase from \"../../contractInterfaces/datasetdatabase\";\n\nexport class DatasetBrowser extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchValue: '',\n            ethAddress: '',\n            numberOfDatasets: '...',\n            datasetList: [],\n            renderedDatasetList: (\n                                <div className=\"loadingCell\">\n                                    <p><b> Loading ... </b></p>\n                                </div>\n                                ),\n            datasetInfo: this.browserIntroduction(),\n            samples: null\n            }\n        this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n\n        // call smart contract to render Datasets\n        this.getNumberOfDatasets()\n        .then(this.getDatasetList, (err) => {alert(err)})\n        .then(this.renderDatasets, (err) => {alert(err)});\n    }\n\n\n    handleOnKeyUp = async (event) => {\n        const target = event.target;\n        const name = target.name;\n        await this.setState({searchValue: event.target.value});\n        this.renderDatasets(this.state.datasetList);\n    }\n\n    browserIntroduction = () => {\n        return (\n            <div className=\"datasetInfo\">\n                <h3>Click on a dataset to display additional info! </h3>\n            </div>\n        )\n    }\n\n    getNumberOfDatasets = async () => {\n        let numberOfDatasets = await datasetdatabase.methods.getNumberOfs().call();\n        this.setState({numberOfDatasets: numberOfDatasets});\n        return new Promise((resolve, reject) => {\n            if (numberOfDatasets != -1) {\n                resolve(numberOfDatasets);\n            } else {\n                reject(Error(\"Can't connect to datasetdatabase smart contract.\"))\n            }\n        })\n    }\n\n    getDatasetList = async (numberOfDatasets) => {\n        var newDatasetHashList = [];\n        var newDatasetList = [];\n        for (var i=0; i<numberOfDatasets; i++) {\n            const ipfsHash = await datasetdatabase.methods.hashes(i).call();\n            const dataset = await datasetdatabase.methods.datasets(ipfsHash).call();\n            dataset['ipfsHash'] = ipfsHash;\n            newDatasetList.push(dataset);\n        }\n        newDatasetList.reverse();\n        this.setState({datasetList: newDatasetList})\n\n        return new Promise((resolve, reject) => {\n            resolve(newDatasetList);\n        })\n    }\n\n    renderDatasets = async (datasetList) => {\n        const subDatasetList = datasetList.filter(dataset => {\n            return dataset['description'].toLowerCase().startsWith(this.state.searchValue)\n        })\n\n        const renderedDatasets = await subDatasetList.map(dataset => {\n            return (\n                <div className=\"datasetContainer\">\n                    <p><b>Owner</b>: {dataset['owner']}</p>\n                    <p><b>Name</b>: not implemented{}</p>\n                    <p><b>Description</b>: {dataset['description']}</p>\n                    <p><b>Creation Date</b>: {new Date(dataset['time']*1000).toLocaleDateString()}</p>\n                    <p><button className=\"moreInfoButton\" name={dataset['ipfsHash']} onClick={this.handleClick}>More Information</button></p>\n            </div>\n            )\n        })\n        this.setState({renderedDatasetList: renderedDatasets});\n\n    }\n\n    handleClick = async (event) => {\n        const fileHash = event.target.name;\n        await ipfs.files.get(fileHash, (err, files) => this.setState({'content': files[0]['content']}))\n\n        let datasetInfo = (\n            <div className=\"datasetInfo\">\n                <p><b>Info1</b>: something</p>\n                <p><b>Info2</b>: something</p>\n                <p><b>Info3</b>: something</p>\n                <p><b>Info3</b>: something</p>\n                <DownloadLink label=\"Download synthetic samples\" filename=\"synthetic_samples\"\n                exportFile={() => this.state['content']}/>\n            </div>\n            )\n        this.setState({datasetInfo: datasetInfo})\n    }\n\n\n    render() {\n        return (\n            <div className=\"pageContainer\">\n                <div className=\"headerContainer\">\n                    <div className=\"searchBarContainer\">\n                        <input type=\"text\" id=\"myInput\" onKeyUp={this.handleOnKeyUp} placeholder=\"Search dataset (by description)\" />\n                    </div>\n                    <p id=\"numberOfDatasets\">{this.state.numberOfDatasets} datasets already uploaded to the system</p>\n                    <hr />\n                </div>\n                <div className=\"resultContainer\">\n                    <tr>\n                        {this.state.renderedDatasetList}\n                    </tr>\n                </div>\n                <div className=\"dataSampleContainer\">\n                    {this.state.datasetInfo}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./dataset.css\"\nimport {DatasetBrowser} from \"../../browsers/dataset.js\"\n\nexport class BrowseDatasetsPage extends React.Component {\n\n    render() {\n        return (\n            <div className='form-container'>\n                <DatasetBrowser />\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./model.css\"\nimport modeldatabase from \"../../contractInterfaces/modeldatabase\";\nimport {Link} from 'react-router-dom';\n\nexport class ModelBrowser extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            searchValue: '',\n            ethAddress: '',\n            numberOfModels: -1,\n            modelList: [],\n            renderedModelList: (\n                <div className=\"loadingCell\">\n                    <p><b> Loading ... </b></p>\n                </div>\n                ),\n            modelInfo: this.browserIntroduction()\n            }\n        this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n\n        // call smart contract to render models\n        this.getNumberOfModels()\n        .then(this.getModelList, (err) => {alert(err)})\n        .then(this.renderModels, (err) => {alert(err)});\n    }\n\n    browserIntroduction = () => {\n        return (\n            <div className=\"modelInfo\">\n                <h3>Click on a model to display additional info! </h3>\n            </div>\n        )\n    };\n\n    getNumberOfModels = async () => {\n        let numberOfModels = await modeldatabase.methods.getNumberOfModels().call();\n        this.setState({numberOfModels: numberOfModels});\n        return new Promise((resolve, reject) => {\n            if (numberOfModels != -1) {\n                resolve(numberOfModels);\n            } else {\n                reject(Error(\"Can't connect to ModelDatabase smart contract.\"))\n            }\n        })\n    }\n\n    getModelList = async (numberOfModels) => {\n        var newModelHashList = [];\n        var newModelList = [];\n        for (var i=0; i<numberOfModels; i++) {\n            const ipfsHash = await modeldatabase.methods.hashes(i).call();\n            const model = await modeldatabase.methods.models(ipfsHash).call();\n            model['ipfsHash'] = ipfsHash;\n            newModelList.push(model);\n        }\n        newModelList.reverse();\n        this.setState({modelList: newModelList})\n\n        return new Promise((resolve, reject) => {\n            resolve(newModelList);\n        })\n    }\n\n\n    renderModels = async (modelList) => {\n        const subModelList = modelList.filter(model => {\n            return model['description'].toLowerCase().startsWith(this.state.searchValue)\n        })\n\n        const renderedModels = await subModelList.map(model => {\n            return (\n            <div className=\"modelContainer\">\n                <p><b>Owner</b>: {model['owner']}</p>\n                <p><b>Name</b>: not implemented{}</p>\n                <p><b>Description</b>: {model['description']}</p>\n                <p><b>Creation Date</b>: {new Date(model['time']*1000).toLocaleDateString()}</p>\n                <p><button className=\"moreInfoButton\" name={model['ipfsHash']} onClick={this.handleClick}>More Information</button>\n                <Link to='create_job' id='jobButton'>Create Job</Link>\n                {/* <button id='like'>like</button> */}\n                </p>\n            </div>\n            )\n        })\n        this.setState({renderedModelList: renderedModels});\n    }\n\n    handleClick = async (event) => {\n\n        let modelInfo = (\n            <div className=\"modelInfo\">\n                <p><b>Info1</b>: something</p>\n                <p><b>Info2</b>: something</p>\n                <p><b>Info3</b>: something</p>\n                <p><b>Info3</b>: something</p>\n            </div>\n            )\n        this.setState({modelInfo: modelInfo})\n    }\n\n    handleOnKeyUp = async (event) => {\n        const target = event.target;\n        const name = target.name;\n        await this.setState({searchValue: event.target.value});\n        this.renderModels(this.state.modelList);\n    }\n\n    render() {\n\n        return (\n            <div className=\"pageContainer\">\n                <div className=\"headerContainer\">\n                    <div className=\"searchBarContainer\">\n\n                        <input type=\"text\" id=\"myInput\" onKeyUp={this.handleOnKeyUp} placeholder=\"Search model (by description)\" />\n                    </div>\n                    <p id=\"numberOfModels\">{this.state.numberOfModels} models already uploaded to the system</p>\n                    <hr />\n                </div>\n                <div className=\"resultContainer\">\n                    <tr>\n                        {this.state.renderedModelList}\n                    </tr>\n                </div>\n                <div className=\"modelInfoContainer\">\n                    {this.state.modelInfo}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./dataset.css\"\nimport {ModelBrowser} from \"../../browsers/model.js\"\n\nexport class BrowseModelsPage extends React.Component {\n\n    render() {\n        return (\n            <div className='form-container'>\n                <ModelBrowser />\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./job.css\";\nimport { Button } from 'react-bootstrap';\n\nexport class JobForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDiv1: false,\n            showDiv2: false,\n            showX: false,\n            showN: false,\n            showU: false,\n            showK: false,\n            name: '',\n            address: '',\n            strategy: '',\n            epoch: '',\n            batch_size: '',\n            round:'',\n            fraction_eval:'',\n            fraction_fit:'',\n            min_fit_clients:'',\n            min_eval_clients:'',\n            min_clients:'',\n            failure:'',\n            beta:'',\n            slr:'',\n            clr:'',\n            da:'',\n            distr:'',\n            mean:'',\n            std:'',\n            ub:'',\n            lb:'',\n            gain:'',\n            fan:'',\n            linear: 'relu',\n            slope:''\n\n        };\n        this.open1 = this.open1.bind(this);\n        this.open2 = this.open2.bind(this);\n        this.openn = this.openn.bind(this);\n        this.openu = this.openu.bind(this);\n        this.openx = this.openx.bind(this);\n        this.openk = this.openk.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleDefault1 = this.handleDefault1.bind(this);\n        this.handleDefault2 = this.handleDefault2.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({[name]: event.target.value});\n    }\n\n    handleDefault1() {\n        this.setState({\n            epoch: 10,\n            batch_size: 32,\n            round:10,\n            fraction_eval:0.2,\n            fraction_fit:0.3,\n            min_fit_clients:2,\n            min_eval_clients:2,\n            min_clients:2,\n            failure: true,\n\n    });}\n    handleDefault2() {\n        this.setState({\n            epoch: 10,\n            batch_size: 32,\n            round:10,\n            fraction_eval:0.2,\n            fraction_fit:0.3,\n            min_fit_clients:2,\n            min_eval_clients:2,\n            min_clients:2,\n            failure: true,\n            beta:0.99,\n            slr:1e-1,\n            clr:1e-1,\n            da:1e-9,\n            distr:'normal',\n            showN: true,\n            showX: false,\n            showU: false,\n            showK: false,\n            mean:0,\n            std:0.01,\n\n    });}\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n    open1() {\n        const { showDiv1 } = this.state;\n        this.setState({\n        showDiv1: !showDiv1,\n            showDiv2: false,\n    });}\n    open2() {\n        const { showDiv2 } = this.state;\n        this.setState({\n        showDiv2: !showDiv2,\n            showDiv1: false,\n    });}\n    openn() {\n        this.setState({\n        showN: true,\n            showU: false,\n            showX: false,\n            showK: false,\n    });}\n    openu() {\n        this.setState({\n        showU: true,\n            showN: false,\n            showX: false,\n            showK: false,\n    });}\n    openx() {\n        this.setState({\n        showX: true,\n            showU: false,\n            showN: false,\n            showK: false,\n    });}\n    openk() {\n        this.setState({\n        showK: true,\n            showU: false,\n            showX: false,\n            showN: false,\n    });}\n    render() {\n\n        return (\n\n        <form onSubmit={this.handleSubmit}>\n            <div className=\"container\">\n                <div className='subContainer'>\n                    <h2>Create a job to train your model!</h2>\n                    <p>Please fill in this form.</p>\n                    <hr />\n\n                    <label>\n                    <b>Aggregator Username</b>:\n                    <input name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} />\n                    </label>\n                    <label>\n                    <b>IP Addres</b>:\n                    <input name=\"address\" type=\"text\" value={this.state.address} onChange={this.handleChange} />\n                    </label>\n\n\n                    <label>\n                    <b>Aggregate Strategy (Choose one of below)</b>:\n                    <br></br>\n                    <br></br>\n                    FedAvg:\n                    <select name=\"strategy\" value={this.state.strategy} onChange={this.handleChange}>\n                        <option value=\"\">--Mode Selection--</option>\n                        <option value=\"datasize\">datasize</option>\n                        <option value=\"accuracy\">accuracy</option>\n                    </select>\n                        <Button onClick={this.open1} disabled={this.state.strategy==''||this.state.strategy=='adagrad'||this.state.strategy=='yogi'||this.state.strategy=='adam'}>Hyperparameter Setting</Button>\n                    <br></br>\n                    <br></br>\n                    FedOpt:\n                    <select name=\"strategy\" value={this.state.strategy} onChange={this.handleChange}>\n                        <option value=\"\">--Mode Selection--</option>\n                        <option value=\"adagrad\">adagrad</option>\n                        <option value=\"yogi\">yogi</option>\n                        <option value=\"adam\">adam</option>\n                    </select>\n                        <Button onClick={this.open2} disabled={this.state.strategy==''||this.state.strategy=='datasize'||this.state.strategy=='accuracy'}>Hyperparameter Setting</Button>\n                    <br></br>\n                    <br></br>\n                    User-define:\n\n                    </label>\n                    { this.state.showDiv1 &&\n                    <div className=\"dev1\">\n                        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" onClick={this.open1}>reselect strategy</button>\n                        <button type=\"button\" className=\"default\" onClick={this.handleDefault1}>use default values</button>\n                        <br />\n                        epoch:\n                        <input name=\"epoch\" type=\"number\" value={this.state.epoch} onChange={this.handleChange} /><br />\n                        batch_size:\n                        <input name=\"batch_size\" type=\"number\" value={this.state.batch_size} onChange={this.handleChange} /><br />\n                        training round:\n                        <input name=\"round\" type=\"number\" value={this.state.round} onChange={this.handleChange} /><br />\n                        fraction_eval:\n                        <input name=\"fraction_eval\" type=\"number\" value={this.state.fraction_eval} onChange={this.handleChange} /><br />\n                        fraction_fit:\n                        <input name=\"fraction_fit\" type=\"number\" value={this.state.fraction_fit} onChange={this.handleChange} /><br />\n                        min_fit_clients:\n                        <input name=\"min_fit_clients\" type=\"number\" value={this.state.min_fit_clients} onChange={this.handleChange} /><br />\n                        min_eval_clients:\n                        <input name=\"min_eval_clients\" type=\"number\" value={this.state.min_eval_clients} onChange={this.handleChange} /><br />\n                        min_available_clients:\n                        <input name=\"min_clients\" type=\"number\" value={this.state.min_clients} onChange={this.handleChange} /><br />\n                        accept_failures:\n                        <select name=\"failure\" value={this.state.failure} onChange={this.handleChange}>\n                            <option value=\"\">--Selection--</option>\n                            <option value=\"true\">true</option>\n                            <option value=\"false\">false</option>\n                        </select>\n                        <br />\n                    </div> }\n                    { this.state.showDiv2 &&\n                    <div className=\"dev2\">\n                        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" onClick={this.open2}>reselect strategy</button>\n                        <button type=\"button\" className=\"default\" onClick={this.handleDefault2}>use default values</button>\n                        <br />\n                        epoch:\n                        <input name=\"epoch\" type=\"number\" value={this.state.epoch} onChange={this.handleChange} /><br />\n                        batch_size:\n                        <input name=\"batch_size\" type=\"number\" value={this.state.batch_size} onChange={this.handleChange} /><br />\n                        training round:\n                        <input name=\"round\" type=\"number\" value={this.state.round} onChange={this.handleChange} /><br />\n                        fraction_eval:\n                        <input name=\"fraction_eval\" type=\"number\" value={this.state.fraction_eval} onChange={this.handleChange} /><br />\n                        fraction_fit:\n                        <input name=\"fraction_fit\" type=\"number\" value={this.state.fraction_fit} onChange={this.handleChange} /><br />\n                        min_fit_clients:\n                        <input name=\"min_fit_clients\" type=\"number\" value={this.state.min_fit_clients} onChange={this.handleChange} /><br />\n                        min_eval_clients:\n                        <input name=\"min_eval_clients\" type=\"number\" value={this.state.min_eval_clients} onChange={this.handleChange} /><br />\n                        min_available_clients:\n                        <input name=\"min_clients\" type=\"number\" value={this.state.min_clients} onChange={this.handleChange} /><br />\n                        accept_failures:\n                        <select name=\"failure\" value={this.state.failure} onChange={this.handleChange}>\n                            <option value=\"\">--Selection--</option>\n                            <option value=\"true\">true</option>\n                            <option value=\"false\">false</option>\n                        </select>\n                        <br />\n                        beta:\n                        <input name=\"beta\" type=\"number\" value={this.state.beta} onChange={this.handleChange} /><br />\n                        server-side learning rate:\n                        <input name=\"slr\" type=\"number\" value={this.state.slr} onChange={this.handleChange} /><br />\n                        client-side learning rate:\n                        <input name=\"clr\" type=\"number\" value={this.state.clr} onChange={this.handleChange} /><br />\n                        degree of adaptability:\n                        <input name=\"da\" type=\"number\" value={this.state.da} onChange={this.handleChange} /><br />\n                        Model initial weights:\n                        <label><input type=\"radio\" onClick={this.openn} name=\"distr\" value=\"normal\" checked={this.state.distr === 'normal'} onChange={this.handleChange} />Normal</label>\n                        <label><input type=\"radio\" onClick={this.openu} name=\"distr\" value=\"uniform\" checked={this.state.distr === 'uniform'} onChange={this.handleChange} />Uniform</label>\n                        <label><input type=\"radio\" onClick={this.openx} name=\"distr\" value=\"xnormal\" checked={this.state.distr === 'xnormal'} onChange={this.handleChange} />Xavier Normal</label>\n                        <label><input type=\"radio\" onClick={this.openx} name=\"distr\" value=\"xuniform\" checked={this.state.distr === 'xuniform'} onChange={this.handleChange} />Xavier Uniform</label>\n                        <label><input type=\"radio\" onClick={this.openk} name=\"distr\" value=\"knormal\" checked={this.state.distr === 'knormal'} onChange={this.handleChange} />Kaiming Normal</label>\n                        <label><input type=\"radio\" onClick={this.openk} name=\"distr\" value=\"kuniform\" checked={this.state.distr === 'kuniform'} onChange={this.handleChange} />Kaiming Uniform</label>\n                        { this.state.showN &&\n                        <div className=\"showN\">\n                            mean:\n                            <input name=\"mean\" type=\"number\" value={this.state.mean} onChange={this.handleChange} /><br />\n                            std:\n                            <input name=\"std\" type=\"number\" value={this.state.std} onChange={this.handleChange} />\n                        </div>}\n                        { this.state.showU &&\n                        <div className=\"showU\">\n                            upper bound:\n                            <input name=\"ub\" type=\"number\" value={this.state.ub} onChange={this.handleChange} /><br />\n                            lower bound:\n                            <input name=\"lb\" type=\"number\" value={this.state.lb} onChange={this.handleChange} />\n                        </div>}\n                        { this.state.showX &&\n                        <div className=\"showX\">\n                            gain:\n                            <input name=\"gain\" type=\"number\" value={this.state.gain} onChange={this.handleChange} /><br />\n                        </div> }\n                        { this.state.showK &&\n                        <div className=\"showK\">\n                            fan mode:\n                            <select name=\"fan\" value={this.state.fan} onChange={this.handleChange}>\n                                <option value=\"\">--Selection--</option>\n                                <option value=\"fan_in\">fan in</option>\n                                <option value=\"fan_out\">fan out</option>\n                            </select><br />\n                            nonlinearity:\n                            <select name=\"linear\" value={this.state.linear} onChange={this.handleChange}>\n                                <option value=\"\">--Selection--</option>\n                                <option value=\"relu\">relu</option>\n                                <option value=\"leakyrelu\">leaky relu</option>\n                            </select>\n                            <div className={this.state.linear}>slope:<input name=\"slope\" type=\"number\" value={this.state.slope} onChange={this.handleChange} /><br /></div>\n                        </div>}\n                    </div> }\n\n                    <input type=\"submit\" value=\"Register\" className=\"register\"/>\n                </div>\n            </div>\n        </form>\n        )\n    }\n}\n","import React from \"react\";\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport \"./App.css\";\nimport {MenuBar} from \"./components/MenuBar/MenuBar.js\";\nimport {RegisterDatasetPage} from \"./components/pages/RegisterAsset/dataset.js\";\nimport {RegisterModelPage} from \"./components/pages/RegisterAsset/model.js\";\nimport {RegisterUserPage} from \"./components/pages/SignUp/main.js\";\nimport {BrowseDatasetsPage} from \"./components/pages/Explore/dataset.js\";\nimport {BrowseModelsPage} from \"./components/pages/Explore/model.js\";\nimport {JobForm} from \"./components/job.js\";\n\nfunction App() {\n\n  return (\n    <body>\n      <div className=\"header\">\n        <div className=\"title\">\n          <h1>Software Engineering Group Project</h1>\n        </div>\n      </div>\n\n      <MenuBar />\n\n      <div className=\"page-container\">\n        <Switch>\n          <Route exact path='/'>\n            <Redirect to=\"/about\" />\n          </Route>\n          {/* <Route path='/about' component={}/> */}\n          <Route path='/sign_up' component={RegisterUserPage}/>\n          <Route path='/register_model' component={RegisterModelPage}/>\n          <Route path='/register_dataset' component={RegisterDatasetPage}/>\n          <Route path='/browse_models' component={BrowseModelsPage}/>\n          <Route path='/browse_datasets' component={BrowseDatasetsPage}/>\n          <Route path='/create_job' component={JobForm}/>\n          {/* <Route path='/browse_jobs' component={JobForm}/> */}\n        </Switch>\n      </div>\n    </body>\n  )\n  }\n\n export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// import Web3 from 'web3';\n\n// const web3 = new Web3(window.web3.currentProvider);\n\n// export default web3;\n\nimport Web3 from 'web3';\n\n    var web3;\n\n    if (typeof window) {\n        if(!window.web3){\n            const provider = new Web3.providers.HttpProvider(\n                `https://ropsten.infura.io/v3/ec89decf66584cd984e5f89b6467f34f`\n                );\n            web3 = new Web3(provider);\n        } else{\n            web3 = new Web3(window.web3.currentProvider);\n        }\n    } else {\n        const provider = new Web3.providers.HttpProvider(\n            `https://ropsten.infura.io/v3/ec89decf66584cd984e5f89b6467f34f`\n            );\n        web3 = new Web3(provider);\n    }\n\n\n//const web3 = new Web3(window.web3.currentProvider);\nexport default web3;","import React from \"react\";\nimport { DragZone } from \"../dragZone/dragZone\";\nimport \"./dataset.css\";\nimport ipfs from '../../ipfs'\nimport web3 from \"../../contractInterfaces/web3\";\nimport datasetdatabase from \"../../contractInterfaces/datasetdatabase\";\n\nexport class UploadDatasetForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            address: '',\n            ipfsHash: null,\n            buffer: '',\n            ethAddress: '',\n            transactionHash: '',\n            txReceipt: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.captureFile = this.captureFile.bind(this);\n        this.convertToBuffer = this.convertToBuffer.bind(this);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({[name]: event.target.value});\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        //bring in user's metamask account address\n        const accounts = await web3.eth.getAccounts();\n        //obtain contract address from storehash.js\n        const ethAddress= await datasetdatabase.options.address;\n        this.setState({ethAddress});\n        //save document to IPFS,return its hash#, and set hash# to state\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n            console.log(err,ipfsHash);\n            //setState by setting ipfsHash to ipfsHash[0].hash\n            this.setState({ ipfsHash:ipfsHash[0].hash });\n            // call Ethereum contract method \"sendHash\" and .send IPFS hash to etheruem contract\n            // return the transaction hash from the ethereum contract\n            datasetdatabase.methods.registerDataset(this.state.ipfsHash, this.state.name, 'Objective').send({\n                from: accounts[0]},\n                (error, transactionHash) => {\n                console.log(transactionHash);\n                this.setState({transactionHash});\n            });\n        })\n    };\n\n    //Take file input from user\n    captureFile = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        const file = event.target.files[0];\n        let reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = () => this.convertToBuffer(reader);\n    };\n\n    //Convert the file to buffer to store on IPFS\n    convertToBuffer = async (reader) => {\n        //file is converted to a buffer for upload to IPFS\n        const buffer = await Buffer.from(reader.result);\n        //set this buffer-using es6 syntax\n        this.setState({buffer});\n    };\n\n    render() {\n        return (\n        <form onSubmit={this.handleSubmit}>\n            <div className=\"container\">\n                <div className='sub-container'>\n                    <h2>Register anonymised samples of your Dataset</h2>\n                    <p>Please fill in this form to register your dataset.</p>\n                    <hr />\n                    <label>\n                    <b>Dataset Name</b>:\n                    <input name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} />\n                    </label>\n                    <label>\n                    <b>Description</b>:\n                    <input name=\"address\" type=\"text\" value={this.state.address} onChange={this.handleChange} />\n                    </label>\n\n                    <label>\n                    <b>Dataset</b>:\n                    <input name= \"dataset\" type = \"file\"\n                               onChange = {this.captureFile}\n                    />\n                    </label>\n\n                    <input type=\"submit\" value=\"Register\" className=\"register\"/>\n\n                </div>\n            </div>\n            <table bordered responsive>\n            <thead>\n            <tr>\n                            <th>Tx Receipt Category</th>\n                            <th> </th>\n                            <th>Values</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>IPFS Hash stored on Ethereum</td>\n                            <td> : </td>\n                            <td>{this.state.ipfsHash}</td>\n                        </tr>\n                        <tr>\n                            <td>Ethereum Contract Address</td>\n                            <td> : </td>\n                            <td>{this.state.ethAddress}</td>\n                        </tr>                  <tr>\n                            <td>Tx # </td>\n                            <td> : </td>\n                            <td>{this.state.transactionHash}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n        </form>\n\n        )\n    }\n}\n","import React from \"react\";\nimport \"./model.css\";\nimport ipfs from '../../ipfs'\nimport modelDatabase from \"../../contractInterfaces/modeldatabase\";\nimport registrydatabase from \"../../contractInterfaces/registrydatabase\";\nimport web3 from \"../../contractInterfaces/web3\";\n\nconst getRevertReason = require('eth-revert-reason')\n\nfunction validate(modelName, description, buffer){\n    // Validate inputs, can add more detailed errors afterwards\n    const errors = [];\n\n    if (modelName.length === 0) {\n        errors.push(\"Name can't be empty\");\n    }\n    if (description.length === 0){\n        errors.push(\"Description can't be empty\")\n    }\n    if (buffer.length === 0){\n        errors.push(\"Have to upload model\")\n    }\n    return errors\n}\n\nexport class UploadModelForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            description: '',\n            ipfsHash: null,\n            buffer: '',\n            ethAddress: '',\n            transactionHash: '',\n            txReceipt: '',\n            displayTable: false,\n            formErrors: [],\n            contractError: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.captureFile = this.captureFile.bind(this);\n        this.convertToBuffer = this.convertToBuffer.bind(this);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({[name]: event.target.value});\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        // Check if there are any form errors,\n        const formErrors = validate(this.state.name, this.state.description, this.state.buffer)\n        // If there is return and display errors\n        if (formErrors.length > 0){\n            this.setState({ formErrors });\n            return;\n        }\n        //bring in user's metamask account address\n        const accounts = await web3.eth.getAccounts();\n\n         // First check if user is registered\n        let isRegistered = await registrydatabase.methods.isUser(accounts[0]).call();\n        console.log(isRegistered)\n        if (!isRegistered){\n            alert(\"Need to be registered, please register as a data-scientist first\")\n            return;\n        }\n\n        await registrydatabase.methods.getUser(accounts[0]).call({from : accounts[0]}, (error, result) =>{\n            if (error){\n                console.log(error.message)\n            }\n            if (result){\n                console.log(result)\n            }\n        })\n\n        // Then check if user is a data-scientist\n\n\n\n        //obtain contract address from modelDatabase.js\n        const ethAddress = await modelDatabase.options.address;\n        this.setState({ethAddress});\n\n        //save document to IPFS,return its hash#, and set hash# to state\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n            console.log(err, ipfsHash);\n            //setState by setting ipfsHash to ipfsHash[0].hash\n            this.setState({ipfsHash: ipfsHash[0].hash});\n\n            // return the transaction hash from the ethereum contract\n            modelDatabase.methods.registerModel(this.state.ipfsHash, this.state.name, 'Objective').send({from: accounts[0]})\n                .on('transactionHash', (hash) =>{\n                    console.log(hash);\n                    this.setState({transactionHash:hash})\n                })\n                .on('error', async (error, receipt) => {\n                    console.log(error);\n                    this.setState({contractError: 'Contract Error: Model already registered'})\n                    if (receipt) {\n                        console.log(receipt[\"transactionHash\"])\n                        //let txHash = receipt[\"transactionHash\"]\n                        //let blockNum = receipt[\"blockNumber\"]\n                        //console.log(await getRevertReason(txHash,'ropsten'))\n                    }\n                })\n        })\n\n    };\n\n    //Take file input from user\n    captureFile = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        const file = event.target.files[0];\n        let reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = () => this.convertToBuffer(reader);\n    };\n\n    //Convert the file to buffer to store on IPFS\n    convertToBuffer = async (reader) => {\n        //file is converted to a buffer for upload to IPFS\n        const buffer = await Buffer.from(reader.result);\n        //set this buffer-using es6 syntax\n        this.setState({buffer});\n    };\n\n    onClick = async () => {\n        try{\n            this.setState({blockNumber:\"waiting..\"});\n            this.setState({gasUsed:\"waiting...\"});\n            await web3.eth.getTransactionReceipt(this.state.transactionHash,\n                (err, txReceipt)=>{console.log(err,txReceipt);\n                this.setState({txReceipt});\n            });\n        } catch(error){console.log(error)}\n        this.setState({displayTable:true})\n    }\n\n\n    render() {\n        const { formErrors } = this.state;\n        const { contractError } = this.state;\n        return (\n\n        <form onSubmit={this.handleSubmit}>\n            <div className=\"container\">\n                <div className='sub-container'>\n                    <h2>Register your Model</h2>\n                    <p>Please fill in this form to register your model.</p>\n                    <hr />\n                    <label>\n                    <b>Model Name</b>:\n                    <input name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} />\n                    </label>\n                    <label>\n                    <b>Description</b>:\n                    <input name=\"description\" type=\"text\" value={this.state.description} onChange={this.handleChange} />\n                    </label>\n\n                    <label>\n                    <b>Model</b>:\n                    <input name= \"model\" type = \"file\" accept=\".py\"\n                               onChange = {this.captureFile}\n                    />\n                    </label>\n\n                    <input type=\"submit\" value=\"Register\" className=\"register\"/>\n\n                </div>\n                {formErrors.map(error => (\n                    <p key={error}>Error: {error}</p>\n                ))}\n                <p> {contractError} </p>\n\n            </div>\n\n            {!this.state.displayTable && <div className=\"center\">\n                <button onClick={this.onClick}>\n                    {'Get Receipt'}\n                </button>\n            </div>}\n\n            {this.state.displayTable && <div className=\"center\">\n                <table bordered responsive>\n                    <thead>\n                        <tr>\n                            <th>Tx Receipt Category</th>\n                            <th> </th>\n                            <th>Values</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>IPFS Hash stored on Ethereum</td>\n                            <td> : </td>\n                            <td>{this.state.ipfsHash}</td>\n                        </tr>\n                        <tr>\n                            <td>Ethereum Contract Address</td>\n                            <td> : </td>\n                            <td>{this.state.ethAddress}</td>\n                        </tr>\n                        <tr>\n                            <td>Tx # </td>\n                            <td> : </td>\n                            <td>{this.state.transactionHash}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>}\n        </form>\n        )\n    }\n}\n","import React from \"react\";\nimport \"./dragZone.css\"\n\nexport class DragZone extends React.Component {\n\n    handleDragOver(event) {\n        event.preventDefault();\n    }\n\n    handleDragEnter(event) {\n        event.preventDefault();\n    }\n\n    handleDragLeave(event) {\n        event.preventDefault();\n    }\n\n    handleFileDrop(event) {\n        event.preventDefault();\n        const files = event.dataTransfer.files;\n        console.log(files);\n    }\n\n    render() {\n        return (\n            <div className=\"dropZoneContainer\"\n                onDragOver={this.handleDragOver}\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className=\"dropMessage\">\n                    <div className=\"uploadIcon\"></div>\n                    Drag & Drop files here or click to upload\n                </div>\n            </div>\n        )\n    }\n}","import web3 from './web3';\nimport { datasetDatabase} from \"../abi/abi\";\n\nconst address = '0x4BE488EBc71Ac2D7a6b38aAa85ab0D9ff8130DBD';\n\nexport default new web3.eth.Contract(datasetDatabase, address);"],"sourceRoot":""}